;%ifdef CONFIG
;{
;  "RegData": {
;    "RAX": "0xffffffffffffff80",
;    "RBX": "0xffffffffffff8080",
;    "RCX": "0xffffffff80008080",
;    "RDX": "0xfffffffffffffff0",
;    "RSI": "0xfffffffffffffffc"
;  },
;  "MemoryRegions": {
;    "0x1000000": "4096"
;  },
;  "MemoryData": {
;    "0x1000000": "0x0000000080008080",
;    "0x1000008": "0x0000000000000030"
;  }
;}
;%endif

(%ssa1) IRHeader %ssa2, #0
  (%ssa2) CodeBlock %start, %end, %ssa1
    (%start i0) BeginBlock %ssa2
    %Addr1 i64 = Constant #0x1000000
    %Val i64 = LoadMem GPR, #8, %Addr1 i64, %Invalid, #8, SXTX, #1
; Test aligned special cases
    %Res1 i64 = Sbfe #0x8, #0x0, %Val
    (%Store1 i64) StoreContext #8, GPR, %Res1 i64, #8
    %Res2 i64 = Sbfe #0x10, #0x0, %Val
    (%Store2 i64) StoreContext #8, GPR, %Res2 i64, #0x10
    %Res3 i64 = Sbfe #0x20, #0x0, %Val
    (%Store3 i64) StoreContext #8, GPR, %Res3 i64, #0x18
    %Addr2 i64 = Constant #0x1000008
; Test non special width
    %Val2 i64 = LoadMem GPR, #8, %Addr2 i64, %Invalid, #8, SXTX, #1

    %Res4 i64 = Sbfe #0x6, #0x0, %Val2
    (%Store4 i64) StoreContext #8, GPR, %Res4 i64, #0x20
; Test with + shift
    %Res5 i64 = Sbfe #0x4, #0x2, %Val2
    (%Store5 i64) StoreContext #8, GPR, %Res5 i64, #0x28
    %BreakRip i64 = EntrypointOffset #0x32, #8
    (%brk i0) Break %BreakRip i64, {0.11.0.128}
    (%end i0) EndBlock %ssa2
